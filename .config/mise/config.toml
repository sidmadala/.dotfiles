[tools]
# global tool versions go here
# you can set these with `rtx use -g`
rust    = "latest"
node    = "latest"
yadm    = "latest"
# go      = "latest"
# opam    = "latest"
python  = "miniforge3-latest"
# java    = "adoptopenjdk-20.0.2+9"

[settings]
# plugins can read the versions files used by other version managers (if enabled by the plugin)
# for example, .nvmrc in the case of node's nvm
# legacy_version_file = true                     # enabled by default (unlike asdf)
# legacy_version_file_disable_tools = ['python'] # disable for specific tools

# configure `rtx install` to always keep the downloaded archive
# always_keep_download = false        # deleted after install by default
# always_keep_install = false         # deleted on failure by default

# configure how frequently (in minutes) to fetch updated plugin repository changes
# this is updated whenever a new runtime is installed
# (note: this isn't currently implemented but there are plans to add it: https://github.com/jdxcode/rtx/issues/128)
# plugin_autoupdate_last_check_duration = '1 week' # set to 0 to disable updates

# config files with these prefixes will be trusted by default
# trusted_config_paths = [
#     '~/work/my-trusted-projects',
# ]

# verbose = false     # set to true to see full installation output, see `RTX_VERBOSE`
# asdf_compat = false # set to true to ensure .tool-versions will be compatible with asdf, see `RTX_ASDF_COMPAT`
# jobs = 4            # number of plugins or runtimes to install in parallel. The default is `4`.
# raw = false         # set to true to directly pipe plugins to stdin/stdout/stderr

# shorthands_file = '~/.config/rtx/shorthands.toml' # path to the shorthands file, see `RTX_SHORTHANDS_FILE`
# disable_default_shorthands = false # disable the default shorthands, see `RTX_DISABLE_DEFAULT_SHORTHANDS`
# disable_tools = ['node']           # disable specific tools, generally used to turn off core tools

# experimental = false # enable experimental features
# log_level = 'debug' # log verbosity, see `RTX_LOG_LEVEL`
experimental = true

[alias.node]
# my_custom_node = '20'  # makes `rtx install node@my_custom_node` install node-20.x
                       # this can also be specified in a plugin (see below in "Aliases")
